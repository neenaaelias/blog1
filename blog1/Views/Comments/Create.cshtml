@model blog1.Models.Comment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Comment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
@*@if (Request.IsAuthenticated)
{
    if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.PostId, "PostId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                @*@Html.DropDownList("PostId", null, htmlAttributes: new { @class = "form-control" })*@
                @*@Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorId, "AuthorId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">*@
                @*@Html.DropDownList("AuthorId", null, htmlAttributes: new { @class = "form-control" })*@
                @*@Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
            </div>
        </div>
    }*@
@*}*@

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control", id = "editor" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
            @html.labelfor(model => model.created, htmlattributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @html.editorfor(model => model.created, new { htmlattributes = new { @class = "form-control" } })
                @html.validationmessagefor(model => model.created, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
            </div>
        </div>*@
@*@if (Request.IsAuthenticated)
{
    if (User.IsInRole("Admin"))
    {

        <div class="form-group">
            @Html.LabelFor(model => model.UpdateReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdateReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdateReason, "", new { @class = "text-danger" })
            </div>
        </div>
    }
}*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
@if (Request.IsAuthenticated)
{
    if (User.IsInRole("Admin"))
    {
                @Html.ActionLink("Back", "Index", "BlogPosts")
    }
}

            </div>
        </div>
    </div>
}
@if (Request.IsAuthenticated)
{
    if (User.IsInRole("Admin"))
    {

<div>
    @Html.ActionLink("Back to List", "Index", "BlogPosts")

</div>
    }
}
@section scripts{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
    //$(function(){
    //    tinymce.init({
    //        forced_root_block: '',
    //        selector: '#editor'

    //    });
    //});
    </script>
}